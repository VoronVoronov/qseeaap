name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: pgsql, redis
          ini-values: |
            memory_limit = 512M

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --no-interaction

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate APP_KEY
        run: php artisan key:generate

      - name: Run migrations
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: ${{ secrets.DATABASE_NAME }}
          DB_USERNAME: ${{ secrets.DATABASE_USER }}
          DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: php artisan migrate --force

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Run tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: ${{ secrets.DATABASE_NAME }}
          DB_USERNAME: ${{ secrets.DATABASE_USER }}
          DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: php artisan test

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase:
          script: |
            cd /var/www/qsee/qsee.su/
            git pull origin master
            composer install --no-interaction --prefer-dist --optimize-autoloader
            npm ci
            npm run build
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan optimize
